/**
* Mixins
*
* @package Minima-WP
*/


// Center block
@mixin center-block {
	display     : block;
	margin-left : auto;
	margin-right: auto;
}


//centering element
@mixin absolute-center{
    display     : grid;
    place-items : center;
}

// flex card style
@mixin flex-card {
    display         : flex;
    flex-wrap       : wrap;
    justify-content : center;
}

@mixin flex-card-child {
    flex: 1 1 25%;
}

// grid card
@mixin card {
    display                 : grid;
    grid-template-columns   : repeat(autofit, minmax(25rem, 1fr));
    justify-content         : space-between;
    padding                 : 2rem;
}

@mixin card-align {
    display         : flex;
    flex-direction  : column;
    justify-content : space-between;
    padding         : 1rem;
}

// clamp card for more responsiveness
@mixin clamp-card {
    width           : clamp(23ch, 50%, 46ch);
    display         : flex;
    flex-direction  : colulmn;
    padding         : 1rem;
}


@mixin rounded($radius: 0.5em) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
  }

/*
############################################
        Button Related Mixins
############################################
*/
@mixin btn-reset() {
    display         : inline-block;
    padding         : $p-btn;
    margin          : $m-btn;
    border          : none;
    border-radius   : $br-btn;
    background-color: transparent;
    text-align      : center;
    text-decoration : none;
    font-size       : $fs-btn;
    font-weight     : $fw-btn;
    color           : $clr-btn;
    cursor          : pointer;

    &:hover {
        color: $clr-btn;
    }
}

@mixin btn($type: 'default') {
    @include btn-reset();
    @if $type == "rounded" {
        @include rounded(5rem);
        padding: $p-btn;
    }
    @else if $type == 'fluid' {
        display: block;
        max-width: 100%;
    }
}

/**
* transition
*/
@mixin transition($for: all, $time-in: 100ms, $type: ease-in-out, $time-out: 0s) {
    transition: $for $time-in $type $time-out;
    -moz-transition: $for $time-in $type $time-out;
    -webkit-transition: $for $time-in $type $time-out;
    -o-transition: $for $time-in $type $time-out;
}

/**
* box-shadow
*/
@mixin box-shadow($top: 0px, $left: 0px, $blur: 1px, $spread: 8px, $color: $clr-shadow, $inset: false) {
    @if $inset {
      -webkit-box-shadow:inset $top $left $blur $color;
      -moz-box-shadow:inset $top $left $blur $color;
      box-shadow:inset $top $left $blur $color;
    } @else {
      -webkit-box-shadow: $top $left $blur $color;
      -moz-box-shadow: $top $left $blur $color;
      box-shadow: $top $left $blur $color;
    }
  }
  